<?xml version="1.0"?>
<xqx:module xmlns:xqx="http://www.w3.org/2005/XQueryX"
            xmlns:xqxuf="http://www.w3.org/2007/xquery-update-10"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.w3.org/2005/XQueryX
                                http://www.w3.org/2005/XQueryX/xqueryx.xsd
                                http://www.w3.org/2007/xquery-update-10
                                http://www.w3.org/2007/xquery-update-10/xquery-update-10-xqueryx.xsd">
  <xqx:mainModule>
    <xqx:prolog>
      <xqx:namespaceDecl>
        <xqx:prefix>env</xqx:prefix>
        <xqx:uri>http://www.w3.org/2003/05/soap-envelope</xqx:uri>
      </xqx:namespaceDecl>
      <xqx:namespaceDecl>
        <xqx:prefix>m</xqx:prefix>
        <xqx:uri>http://travelcompany.example.org/reservation</xqx:uri>
      </xqx:namespaceDecl>
      <xqx:namespaceDecl>
        <xqx:prefix>n</xqx:prefix>
        <xqx:uri>http://mycompany.example.com/employees</xqx:uri>
      </xqx:namespaceDecl>
      <xqx:namespaceDecl>
        <xqx:prefix>p</xqx:prefix>
        <xqx:uri>http://travelcompany.example.org/reservation/travel</xqx:uri>
      </xqx:namespaceDecl>
      <xqx:varDecl>
        <xqx:varName>airportsDoc</xqx:varName>
        <xqx:external/>
      </xqx:varDecl>
      <xqx:varDecl>
        <xqx:varName>msg</xqx:varName>
        <xqx:external/>
      </xqx:varDecl>
      <xqx:varDecl>
        <xqx:varName>airports</xqx:varName>
        <xqx:varValue>
          <xqx:pathExpr>
            <xqx:stepExpr>
              <xqx:filterExpr>
                <xqx:varRef>
                  <xqx:name>airportsDoc</xqx:name>
                </xqx:varRef>
              </xqx:filterExpr>
            </xqx:stepExpr>
            <xqx:stepExpr>
              <xqx:xpathAxis>child</xqx:xpathAxis>
              <xqx:nameTest>AIRPORTS</xqx:nameTest>
            </xqx:stepExpr>
          </xqx:pathExpr>
        </xqx:varValue>
      </xqx:varDecl>
      <xqx:functionDecl>
        <xqx:functionName xqx:prefix="local">airportChoices</xqx:functionName>
        <xqx:paramList>
          <xqx:param>
            <xqx:varName>city</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:atomicType xqx:prefix="xs">string</xqx:atomicType>
            </xqx:typeDeclaration>
          </xqx:param>
        </xqx:paramList>
        <xqx:functionBody>
          <xqx:flworExpr>
            <xqx:letClause>
              <xqx:letClauseItem>
                <xqx:typedVariableBinding>
                  <xqx:varName>airports</xqx:varName>
                </xqx:typedVariableBinding>
                <xqx:letExpr>
                  <xqx:pathExpr>
                    <xqx:stepExpr>
                      <xqx:filterExpr>
                        <xqx:varRef>
                          <xqx:name>airports</xqx:name>
                        </xqx:varRef>
                      </xqx:filterExpr>
                      <xqx:predicates>
                        <xqx:equalOp>
                          <xqx:firstOperand>
                            <xqx:pathExpr>
                              <xqx:stepExpr>
                                <xqx:xpathAxis>child</xqx:xpathAxis>
                                <xqx:nameTest>CITY</xqx:nameTest>
                              </xqx:stepExpr>
                            </xqx:pathExpr>
                          </xqx:firstOperand>
                          <xqx:secondOperand>
                            <xqx:varRef>
                              <xqx:name>city</xqx:name>
                            </xqx:varRef>
                          </xqx:secondOperand>
                        </xqx:equalOp>
                      </xqx:predicates>
                    </xqx:stepExpr>
                  </xqx:pathExpr>
                </xqx:letExpr>
              </xqx:letClauseItem>
            </xqx:letClause>
            <xqx:returnClause>
              <xqx:ifThenElseExpr>
                <xqx:ifClause>
                  <xqx:equalOp>
                    <xqx:firstOperand>
                      <xqx:functionCallExpr>
                        <xqx:functionName>count</xqx:functionName>
                        <xqx:arguments>
                          <xqx:varRef>
                            <xqx:name>airports</xqx:name>
                          </xqx:varRef>
                        </xqx:arguments>
                      </xqx:functionCallExpr>
                    </xqx:firstOperand>
                    <xqx:secondOperand>
                      <xqx:integerConstantExpr>
                        <xqx:value>0</xqx:value>
                      </xqx:integerConstantExpr>
                    </xqx:secondOperand>
                  </xqx:equalOp>
                </xqx:ifClause>
                <xqx:thenClause>
                  <xqx:elementConstructor>
                    <xqx:tagName>error</xqx:tagName>
                    <xqx:elementContent>
                      <xqx:stringConstantExpr>
                        <xqx:value> No airports found for </xqx:value>
                      </xqx:stringConstantExpr>
                      <xqx:varRef>
                        <xqx:name>city</xqx:name>
                      </xqx:varRef>
                      <xqx:stringConstantExpr>
                        <xqx:value>!</xqx:value>
                      </xqx:stringConstantExpr>
                    </xqx:elementContent>
                  </xqx:elementConstructor>
                </xqx:thenClause>
                <xqx:elseClause>
                  <xqx:ifThenElseExpr>
                    <xqx:ifClause>
                      <xqx:greaterThanOp>
                        <xqx:firstOperand>
                          <xqx:functionCallExpr>
                            <xqx:functionName>count</xqx:functionName>
                            <xqx:arguments>
                              <xqx:varRef>
                                <xqx:name>airports</xqx:name>
                              </xqx:varRef>
                            </xqx:arguments>
                          </xqx:functionCallExpr>
                        </xqx:firstOperand>
                        <xqx:secondOperand>
                          <xqx:integerConstantExpr>
                            <xqx:value>1</xqx:value>
                          </xqx:integerConstantExpr>
                        </xqx:secondOperand>
                      </xqx:greaterThanOp>
                    </xqx:ifClause>
                    <xqx:thenClause>
                      <xqx:elementConstructor>
                        <xqx:tagName>airportChoices</xqx:tagName>
                        <xqx:elementContent>
                          <xqx:flworExpr>
                            <xqx:forClause>
                              <xqx:forClauseItem>
                                <xqx:typedVariableBinding>
                                  <xqx:varName>c</xqx:varName>
                                </xqx:typedVariableBinding>
                                <xqx:forExpr>
                                  <xqx:pathExpr>
                                    <xqx:stepExpr>
                                      <xqx:filterExpr>
                                        <xqx:varRef>
                                          <xqx:name>airports</xqx:name>
                                        </xqx:varRef>
                                      </xqx:filterExpr>
                                    </xqx:stepExpr>
                                    <xqx:stepExpr>
                                      <xqx:xpathAxis>child</xqx:xpathAxis>
                                      <xqx:nameTest>CODE</xqx:nameTest>
                                    </xqx:stepExpr>
                                  </xqx:pathExpr>
                                </xqx:forExpr>
                              </xqx:forClauseItem>
                            </xqx:forClause>
                            <xqx:returnClause>
                              <xqx:sequenceExpr>
                                <xqx:functionCallExpr>
                                  <xqx:functionName>string</xqx:functionName>
                                  <xqx:arguments>
                                    <xqx:varRef>
                                      <xqx:name>c</xqx:name>
                                    </xqx:varRef>
                                  </xqx:arguments>
                                </xqx:functionCallExpr>
                                <xqx:stringConstantExpr>
                                  <xqx:value> </xqx:value>
                                </xqx:stringConstantExpr>
                              </xqx:sequenceExpr>
                            </xqx:returnClause>
                          </xqx:flworExpr>
                        </xqx:elementContent>
                      </xqx:elementConstructor>
                    </xqx:thenClause>
                    <xqx:elseClause>
                      <xqx:sequenceExpr/>
                    </xqx:elseClause>
                  </xqx:ifThenElseExpr>
                </xqx:elseClause>
              </xqx:ifThenElseExpr>
            </xqx:returnClause>
          </xqx:flworExpr>
        </xqx:functionBody>
      </xqx:functionDecl>
      <xqx:functionDecl>
        <xqx:functionName xqx:prefix="local">airports</xqx:functionName>
        <xqx:paramList>
          <xqx:param>
            <xqx:varName>in</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:elementTest>
                <xqx:elementName>
                  <xqx:QName xqx:prefix="env">Envelope</xqx:QName>
                </xqx:elementName>
              </xqx:elementTest>
            </xqx:typeDeclaration>
          </xqx:param>
        </xqx:paramList>
        <xqx:functionBody>
          <xqx:flworExpr>
            <xqx:letClause>
              <xqx:letClauseItem>
                <xqx:typedVariableBinding>
                  <xqx:varName>departureDeparting</xqx:varName>
                </xqx:typedVariableBinding>
                <xqx:letExpr>
                  <xqx:pathExpr>
                    <xqx:stepExpr>
                      <xqx:filterExpr>
                        <xqx:varRef>
                          <xqx:name>in</xqx:name>
                        </xqx:varRef>
                      </xqx:filterExpr>
                    </xqx:stepExpr>
                    <xqx:stepExpr>
                      <xqx:xpathAxis>descendant-or-self</xqx:xpathAxis>
                      <xqx:anyKindTest/>
                    </xqx:stepExpr>
                    <xqx:stepExpr>
                      <xqx:xpathAxis>child</xqx:xpathAxis>
                      <xqx:nameTest xqx:prefix="p">departure</xqx:nameTest>
                    </xqx:stepExpr>
                    <xqx:stepExpr>
                      <xqx:xpathAxis>child</xqx:xpathAxis>
                      <xqx:nameTest xqx:prefix="p">departing</xqx:nameTest>
                    </xqx:stepExpr>
                  </xqx:pathExpr>
                </xqx:letExpr>
              </xqx:letClauseItem>
            </xqx:letClause>
            <xqx:letClause>
              <xqx:letClauseItem>
                <xqx:typedVariableBinding>
                  <xqx:varName>departureDepartingAirports</xqx:varName>
                </xqx:typedVariableBinding>
                <xqx:letExpr>
                  <xqx:pathExpr>
                    <xqx:stepExpr>
                      <xqx:filterExpr>
                        <xqx:varRef>
                          <xqx:name>airports</xqx:name>
                        </xqx:varRef>
                      </xqx:filterExpr>
                      <xqx:predicates>
                        <xqx:equalOp>
                          <xqx:firstOperand>
                            <xqx:pathExpr>
                              <xqx:stepExpr>
                                <xqx:xpathAxis>child</xqx:xpathAxis>
                                <xqx:nameTest>CITY</xqx:nameTest>
                              </xqx:stepExpr>
                            </xqx:pathExpr>
                          </xqx:firstOperand>
                          <xqx:secondOperand>
                            <xqx:varRef>
                              <xqx:name>departureDeparting</xqx:name>
                            </xqx:varRef>
                          </xqx:secondOperand>
                        </xqx:equalOp>
                      </xqx:predicates>
                    </xqx:stepExpr>
                  </xqx:pathExpr>
                </xqx:letExpr>
              </xqx:letClauseItem>
            </xqx:letClause>
            <xqx:letClause>
              <xqx:letClauseItem>
                <xqx:typedVariableBinding>
                  <xqx:varName>departureArriving</xqx:varName>
                </xqx:typedVariableBinding>
                <xqx:letExpr>
                  <xqx:pathExpr>
                    <xqx:stepExpr>
                      <xqx:filterExpr>
                        <xqx:varRef>
                          <xqx:name>in</xqx:name>
                        </xqx:varRef>
                      </xqx:filterExpr>
                    </xqx:stepExpr>
                    <xqx:stepExpr>
                      <xqx:xpathAxis>descendant-or-self</xqx:xpathAxis>
                      <xqx:anyKindTest/>
                    </xqx:stepExpr>
                    <xqx:stepExpr>
                      <xqx:xpathAxis>child</xqx:xpathAxis>
                      <xqx:nameTest xqx:prefix="p">departure</xqx:nameTest>
                    </xqx:stepExpr>
                    <xqx:stepExpr>
                      <xqx:xpathAxis>child</xqx:xpathAxis>
                      <xqx:nameTest xqx:prefix="p">arriving</xqx:nameTest>
                    </xqx:stepExpr>
                  </xqx:pathExpr>
                </xqx:letExpr>
              </xqx:letClauseItem>
            </xqx:letClause>
            <xqx:letClause>
              <xqx:letClauseItem>
                <xqx:typedVariableBinding>
                  <xqx:varName>departureArrivingAirports</xqx:varName>
                </xqx:typedVariableBinding>
                <xqx:letExpr>
                  <xqx:pathExpr>
                    <xqx:stepExpr>
                      <xqx:filterExpr>
                        <xqx:varRef>
                          <xqx:name>airports</xqx:name>
                        </xqx:varRef>
                      </xqx:filterExpr>
                      <xqx:predicates>
                        <xqx:equalOp>
                          <xqx:firstOperand>
                            <xqx:pathExpr>
                              <xqx:stepExpr>
                                <xqx:xpathAxis>child</xqx:xpathAxis>
                                <xqx:nameTest>CITY</xqx:nameTest>
                              </xqx:stepExpr>
                            </xqx:pathExpr>
                          </xqx:firstOperand>
                          <xqx:secondOperand>
                            <xqx:varRef>
                              <xqx:name>departureArriving</xqx:name>
                            </xqx:varRef>
                          </xqx:secondOperand>
                        </xqx:equalOp>
                      </xqx:predicates>
                    </xqx:stepExpr>
                  </xqx:pathExpr>
                </xqx:letExpr>
              </xqx:letClauseItem>
            </xqx:letClause>
            <xqx:letClause>
              <xqx:letClauseItem>
                <xqx:typedVariableBinding>
                  <xqx:varName>returnDeparting</xqx:varName>
                </xqx:typedVariableBinding>
                <xqx:letExpr>
                  <xqx:pathExpr>
                    <xqx:stepExpr>
                      <xqx:filterExpr>
                        <xqx:varRef>
                          <xqx:name>in</xqx:name>
                        </xqx:varRef>
                      </xqx:filterExpr>
                    </xqx:stepExpr>
                    <xqx:stepExpr>
                      <xqx:xpathAxis>descendant-or-self</xqx:xpathAxis>
                      <xqx:anyKindTest/>
                    </xqx:stepExpr>
                    <xqx:stepExpr>
                      <xqx:xpathAxis>child</xqx:xpathAxis>
                      <xqx:nameTest xqx:prefix="p">return</xqx:nameTest>
                    </xqx:stepExpr>
                    <xqx:stepExpr>
                      <xqx:xpathAxis>child</xqx:xpathAxis>
                      <xqx:nameTest xqx:prefix="p">departing</xqx:nameTest>
                    </xqx:stepExpr>
                  </xqx:pathExpr>
                </xqx:letExpr>
              </xqx:letClauseItem>
            </xqx:letClause>
            <xqx:letClause>
              <xqx:letClauseItem>
                <xqx:typedVariableBinding>
                  <xqx:varName>returnDepartingAirports</xqx:varName>
                </xqx:typedVariableBinding>
                <xqx:letExpr>
                  <xqx:pathExpr>
                    <xqx:stepExpr>
                      <xqx:filterExpr>
                        <xqx:varRef>
                          <xqx:name>airports</xqx:name>
                        </xqx:varRef>
                      </xqx:filterExpr>
                      <xqx:predicates>
                        <xqx:equalOp>
                          <xqx:firstOperand>
                            <xqx:pathExpr>
                              <xqx:stepExpr>
                                <xqx:xpathAxis>child</xqx:xpathAxis>
                                <xqx:nameTest>CITY</xqx:nameTest>
                              </xqx:stepExpr>
                            </xqx:pathExpr>
                          </xqx:firstOperand>
                          <xqx:secondOperand>
                            <xqx:varRef>
                              <xqx:name>returnDeparting</xqx:name>
                            </xqx:varRef>
                          </xqx:secondOperand>
                        </xqx:equalOp>
                      </xqx:predicates>
                    </xqx:stepExpr>
                  </xqx:pathExpr>
                </xqx:letExpr>
              </xqx:letClauseItem>
            </xqx:letClause>
            <xqx:letClause>
              <xqx:letClauseItem>
                <xqx:typedVariableBinding>
                  <xqx:varName>returnArriving</xqx:varName>
                </xqx:typedVariableBinding>
                <xqx:letExpr>
                  <xqx:pathExpr>
                    <xqx:stepExpr>
                      <xqx:filterExpr>
                        <xqx:varRef>
                          <xqx:name>in</xqx:name>
                        </xqx:varRef>
                      </xqx:filterExpr>
                    </xqx:stepExpr>
                    <xqx:stepExpr>
                      <xqx:xpathAxis>descendant-or-self</xqx:xpathAxis>
                      <xqx:anyKindTest/>
                    </xqx:stepExpr>
                    <xqx:stepExpr>
                      <xqx:xpathAxis>child</xqx:xpathAxis>
                      <xqx:nameTest xqx:prefix="p">return</xqx:nameTest>
                    </xqx:stepExpr>
                    <xqx:stepExpr>
                      <xqx:xpathAxis>child</xqx:xpathAxis>
                      <xqx:nameTest xqx:prefix="p">arriving</xqx:nameTest>
                    </xqx:stepExpr>
                  </xqx:pathExpr>
                </xqx:letExpr>
              </xqx:letClauseItem>
            </xqx:letClause>
            <xqx:letClause>
              <xqx:letClauseItem>
                <xqx:typedVariableBinding>
                  <xqx:varName>returnArrivingAirports</xqx:varName>
                </xqx:typedVariableBinding>
                <xqx:letExpr>
                  <xqx:pathExpr>
                    <xqx:stepExpr>
                      <xqx:filterExpr>
                        <xqx:varRef>
                          <xqx:name>airports</xqx:name>
                        </xqx:varRef>
                      </xqx:filterExpr>
                      <xqx:predicates>
                        <xqx:equalOp>
                          <xqx:firstOperand>
                            <xqx:pathExpr>
                              <xqx:stepExpr>
                                <xqx:xpathAxis>child</xqx:xpathAxis>
                                <xqx:nameTest>CITY</xqx:nameTest>
                              </xqx:stepExpr>
                            </xqx:pathExpr>
                          </xqx:firstOperand>
                          <xqx:secondOperand>
                            <xqx:varRef>
                              <xqx:name>returnArriving</xqx:name>
                            </xqx:varRef>
                          </xqx:secondOperand>
                        </xqx:equalOp>
                      </xqx:predicates>
                    </xqx:stepExpr>
                  </xqx:pathExpr>
                </xqx:letExpr>
              </xqx:letClauseItem>
            </xqx:letClause>
            <xqx:returnClause>
              <xqx:ifThenElseExpr>
                <xqx:ifClause>
                  <xqx:orOp>
                    <xqx:firstOperand>
                      <xqx:orOp>
                        <xqx:firstOperand>
                          <xqx:orOp>
                            <xqx:firstOperand>
                              <xqx:orOp>
                                <xqx:firstOperand>
                                  <xqx:orOp>
                                    <xqx:firstOperand>
                                      <xqx:orOp>
                                        <xqx:firstOperand>
                                          <xqx:orOp>
                                            <xqx:firstOperand>
                                              <xqx:equalOp>
                                                <xqx:firstOperand>
                                                  <xqx:functionCallExpr>
                                                    <xqx:functionName>count</xqx:functionName>
                                                    <xqx:arguments>
                                                      <xqx:varRef>
                                                        <xqx:name>departureDepartingAirports</xqx:name>
                                                      </xqx:varRef>
                                                    </xqx:arguments>
                                                  </xqx:functionCallExpr>
                                                </xqx:firstOperand>
                                                <xqx:secondOperand>
                                                  <xqx:integerConstantExpr>
                                                    <xqx:value>0</xqx:value>
                                                  </xqx:integerConstantExpr>
                                                </xqx:secondOperand>
                                              </xqx:equalOp>
                                            </xqx:firstOperand>
                                            <xqx:secondOperand>
                                              <xqx:greaterThanOp>
                                                <xqx:firstOperand>
                                                  <xqx:functionCallExpr>
                                                    <xqx:functionName>count</xqx:functionName>
                                                    <xqx:arguments>
                                                      <xqx:varRef>
                                                        <xqx:name>departureDepartingAirports</xqx:name>
                                                      </xqx:varRef>
                                                    </xqx:arguments>
                                                  </xqx:functionCallExpr>
                                                </xqx:firstOperand>
                                                <xqx:secondOperand>
                                                  <xqx:integerConstantExpr>
                                                    <xqx:value>1</xqx:value>
                                                  </xqx:integerConstantExpr>
                                                </xqx:secondOperand>
                                              </xqx:greaterThanOp>
                                            </xqx:secondOperand>
                                          </xqx:orOp>
                                        </xqx:firstOperand>
                                        <xqx:secondOperand>
                                          <xqx:equalOp>
                                            <xqx:firstOperand>
                                              <xqx:functionCallExpr>
                                                <xqx:functionName>count</xqx:functionName>
                                                <xqx:arguments>
                                                  <xqx:varRef>
                                                    <xqx:name>departureArrivingAirports</xqx:name>
                                                  </xqx:varRef>
                                                </xqx:arguments>
                                              </xqx:functionCallExpr>
                                            </xqx:firstOperand>
                                            <xqx:secondOperand>
                                              <xqx:integerConstantExpr>
                                                <xqx:value>0</xqx:value>
                                              </xqx:integerConstantExpr>
                                            </xqx:secondOperand>
                                          </xqx:equalOp>
                                        </xqx:secondOperand>
                                      </xqx:orOp>
                                    </xqx:firstOperand>
                                    <xqx:secondOperand>
                                      <xqx:greaterThanOp>
                                        <xqx:firstOperand>
                                          <xqx:functionCallExpr>
                                            <xqx:functionName>count</xqx:functionName>
                                            <xqx:arguments>
                                              <xqx:varRef>
                                                <xqx:name>departureArrivingAirports</xqx:name>
                                              </xqx:varRef>
                                            </xqx:arguments>
                                          </xqx:functionCallExpr>
                                        </xqx:firstOperand>
                                        <xqx:secondOperand>
                                          <xqx:integerConstantExpr>
                                            <xqx:value>1</xqx:value>
                                          </xqx:integerConstantExpr>
                                        </xqx:secondOperand>
                                      </xqx:greaterThanOp>
                                    </xqx:secondOperand>
                                  </xqx:orOp>
                                </xqx:firstOperand>
                                <xqx:secondOperand>
                                  <xqx:equalOp>
                                    <xqx:firstOperand>
                                      <xqx:functionCallExpr>
                                        <xqx:functionName>count</xqx:functionName>
                                        <xqx:arguments>
                                          <xqx:varRef>
                                            <xqx:name>returnDepartingAirports</xqx:name>
                                          </xqx:varRef>
                                        </xqx:arguments>
                                      </xqx:functionCallExpr>
                                    </xqx:firstOperand>
                                    <xqx:secondOperand>
                                      <xqx:integerConstantExpr>
                                        <xqx:value>0</xqx:value>
                                      </xqx:integerConstantExpr>
                                    </xqx:secondOperand>
                                  </xqx:equalOp>
                                </xqx:secondOperand>
                              </xqx:orOp>
                            </xqx:firstOperand>
                            <xqx:secondOperand>
                              <xqx:greaterThanOp>
                                <xqx:firstOperand>
                                  <xqx:functionCallExpr>
                                    <xqx:functionName>count</xqx:functionName>
                                    <xqx:arguments>
                                      <xqx:varRef>
                                        <xqx:name>returnDepartingAirports</xqx:name>
                                      </xqx:varRef>
                                    </xqx:arguments>
                                  </xqx:functionCallExpr>
                                </xqx:firstOperand>
                                <xqx:secondOperand>
                                  <xqx:integerConstantExpr>
                                    <xqx:value>1</xqx:value>
                                  </xqx:integerConstantExpr>
                                </xqx:secondOperand>
                              </xqx:greaterThanOp>
                            </xqx:secondOperand>
                          </xqx:orOp>
                        </xqx:firstOperand>
                        <xqx:secondOperand>
                          <xqx:equalOp>
                            <xqx:firstOperand>
                              <xqx:functionCallExpr>
                                <xqx:functionName>count</xqx:functionName>
                                <xqx:arguments>
                                  <xqx:varRef>
                                    <xqx:name>returnArrivingAirports</xqx:name>
                                  </xqx:varRef>
                                </xqx:arguments>
                              </xqx:functionCallExpr>
                            </xqx:firstOperand>
                            <xqx:secondOperand>
                              <xqx:integerConstantExpr>
                                <xqx:value>0</xqx:value>
                              </xqx:integerConstantExpr>
                            </xqx:secondOperand>
                          </xqx:equalOp>
                        </xqx:secondOperand>
                      </xqx:orOp>
                    </xqx:firstOperand>
                    <xqx:secondOperand>
                      <xqx:greaterThanOp>
                        <xqx:firstOperand>
                          <xqx:functionCallExpr>
                            <xqx:functionName>count</xqx:functionName>
                            <xqx:arguments>
                              <xqx:varRef>
                                <xqx:name>returnArrivingAirports</xqx:name>
                              </xqx:varRef>
                            </xqx:arguments>
                          </xqx:functionCallExpr>
                        </xqx:firstOperand>
                        <xqx:secondOperand>
                          <xqx:integerConstantExpr>
                            <xqx:value>1</xqx:value>
                          </xqx:integerConstantExpr>
                        </xqx:secondOperand>
                      </xqx:greaterThanOp>
                    </xqx:secondOperand>
                  </xqx:orOp>
                </xqx:ifClause>
                <xqx:thenClause>
                  <xqx:elementConstructor>
                    <xqx:tagName xqx:prefix="p">itineraryClarification</xqx:tagName>
                    <xqx:elementContent>
                      <xqx:elementConstructor>
                        <xqx:tagName xqx:prefix="p">departure</xqx:tagName>
                        <xqx:elementContent>
                          <xqx:elementConstructor>
                            <xqx:tagName xqx:prefix="p">departing</xqx:tagName>
                            <xqx:elementContent>
                              <xqx:functionCallExpr>
                                <xqx:functionName xqx:prefix="local">airportChoices</xqx:functionName>
                                <xqx:arguments>
                                  <xqx:varRef>
                                    <xqx:name>departureDeparting</xqx:name>
                                  </xqx:varRef>
                                </xqx:arguments>
                              </xqx:functionCallExpr>
                            </xqx:elementContent>
                          </xqx:elementConstructor>
                          <xqx:elementConstructor>
                            <xqx:tagName xqx:prefix="p">arriving</xqx:tagName>
                            <xqx:elementContent>
                              <xqx:functionCallExpr>
                                <xqx:functionName xqx:prefix="local">airportChoices</xqx:functionName>
                                <xqx:arguments>
                                  <xqx:varRef>
                                    <xqx:name>departureArriving</xqx:name>
                                  </xqx:varRef>
                                </xqx:arguments>
                              </xqx:functionCallExpr>
                            </xqx:elementContent>
                          </xqx:elementConstructor>
                        </xqx:elementContent>
                      </xqx:elementConstructor>
                      <xqx:elementConstructor>
                        <xqx:tagName xqx:prefix="p">return</xqx:tagName>
                        <xqx:elementContent>
                          <xqx:elementConstructor>
                            <xqx:tagName xqx:prefix="p">departing</xqx:tagName>
                            <xqx:elementContent>
                              <xqx:functionCallExpr>
                                <xqx:functionName xqx:prefix="local">airportChoices</xqx:functionName>
                                <xqx:arguments>
                                  <xqx:varRef>
                                    <xqx:name>returnDeparting</xqx:name>
                                  </xqx:varRef>
                                </xqx:arguments>
                              </xqx:functionCallExpr>
                            </xqx:elementContent>
                          </xqx:elementConstructor>
                          <xqx:elementConstructor>
                            <xqx:tagName xqx:prefix="p">arriving</xqx:tagName>
                            <xqx:elementContent>
                              <xqx:functionCallExpr>
                                <xqx:functionName xqx:prefix="local">airportChoices</xqx:functionName>
                                <xqx:arguments>
                                  <xqx:varRef>
                                    <xqx:name>returnArriving</xqx:name>
                                  </xqx:varRef>
                                </xqx:arguments>
                              </xqx:functionCallExpr>
                            </xqx:elementContent>
                          </xqx:elementConstructor>
                        </xqx:elementContent>
                      </xqx:elementConstructor>
                    </xqx:elementContent>
                  </xqx:elementConstructor>
                </xqx:thenClause>
                <xqx:elseClause>
                  <xqx:elementConstructor>
                    <xqx:tagName xqx:prefix="p">itinerary</xqx:tagName>
                    <xqx:elementContent>
                      <xqx:elementConstructor>
                        <xqx:tagName xqx:prefix="p">departure</xqx:tagName>
                        <xqx:elementContent>
                          <xqx:elementConstructor>
                            <xqx:tagName xqx:prefix="p">departing</xqx:tagName>
                            <xqx:elementContent>
                              <xqx:varRef>
                                <xqx:name>departureDeparting</xqx:name>
                              </xqx:varRef>
                            </xqx:elementContent>
                          </xqx:elementConstructor>
                          <xqx:elementConstructor>
                            <xqx:tagName xqx:prefix="p">arriving</xqx:tagName>
                            <xqx:elementContent>
                              <xqx:varRef>
                                <xqx:name>departureArriving</xqx:name>
                              </xqx:varRef>
                            </xqx:elementContent>
                          </xqx:elementConstructor>
                        </xqx:elementContent>
                      </xqx:elementConstructor>
                      <xqx:elementConstructor>
                        <xqx:tagName xqx:prefix="p">return</xqx:tagName>
                        <xqx:elementContent>
                          <xqx:elementConstructor>
                            <xqx:tagName xqx:prefix="p">departing</xqx:tagName>
                            <xqx:elementContent>
                              <xqx:varRef>
                                <xqx:name>returnDeparting</xqx:name>
                              </xqx:varRef>
                            </xqx:elementContent>
                          </xqx:elementConstructor>
                          <xqx:elementConstructor>
                            <xqx:tagName xqx:prefix="p">arriving</xqx:tagName>
                            <xqx:elementContent>
                              <xqx:varRef>
                                <xqx:name>returnArriving</xqx:name>
                              </xqx:varRef>
                            </xqx:elementContent>
                          </xqx:elementConstructor>
                        </xqx:elementContent>
                      </xqx:elementConstructor>
                    </xqx:elementContent>
                  </xqx:elementConstructor>
                </xqx:elseClause>
              </xqx:ifThenElseExpr>
            </xqx:returnClause>
          </xqx:flworExpr>
        </xqx:functionBody>
      </xqx:functionDecl>
    </xqx:prolog>
    <xqx:queryBody>
      <xqxuf:transformExpr>
        <xqxuf:transformCopies>
          <xqxuf:transformCopy>
            <xqx:varRef>
              <xqx:name>out</xqx:name>
            </xqx:varRef>
            <xqxuf:copySource>
              <xqx:pathExpr>
                <xqx:stepExpr>
                  <xqx:filterExpr>
                    <xqx:varRef>
                      <xqx:name>msg</xqx:name>
                    </xqx:varRef>
                  </xqx:filterExpr>
                </xqx:stepExpr>
                <xqx:stepExpr>
                  <xqx:xpathAxis>child</xqx:xpathAxis>
                  <xqx:nameTest xqx:prefix="env">Envelope</xqx:nameTest>
                </xqx:stepExpr>
              </xqx:pathExpr>
            </xqxuf:copySource>
          </xqxuf:transformCopy>
        </xqxuf:transformCopies>
        <xqxuf:modifyExpr>
          <xqx:sequenceExpr>
            <xqxuf:replaceExpr>
              <xqxuf:replaceValue/>
              <xqxuf:targetExpr>
                <xqx:pathExpr>
                  <xqx:stepExpr>
                    <xqx:filterExpr>
                      <xqx:varRef>
                        <xqx:name>out</xqx:name>
                      </xqx:varRef>
                    </xqx:filterExpr>
                  </xqx:stepExpr>
                  <xqx:stepExpr>
                    <xqx:xpathAxis>descendant-or-self</xqx:xpathAxis>
                    <xqx:anyKindTest/>
                  </xqx:stepExpr>
                  <xqx:stepExpr>
                    <xqx:xpathAxis>child</xqx:xpathAxis>
                    <xqx:nameTest xqx:prefix="m">dateAndTime</xqx:nameTest>
                  </xqx:stepExpr>
                </xqx:pathExpr>
              </xqxuf:targetExpr>
              <xqxuf:replacementExpr>
                <xqx:functionCallExpr>
                  <xqx:functionName xqx:prefix="xs">dateTime</xqx:functionName>
                  <xqx:arguments>
                    <xqx:stringConstantExpr>
                      <xqx:value>2007-08-16T22:57:20+01:00</xqx:value>
                    </xqx:stringConstantExpr>
                  </xqx:arguments>
                </xqx:functionCallExpr>
              </xqxuf:replacementExpr>
            </xqxuf:replaceExpr>
            <xqxuf:replaceExpr>
              <xqxuf:targetExpr>
                <xqx:pathExpr>
                  <xqx:stepExpr>
                    <xqx:filterExpr>
                      <xqx:varRef>
                        <xqx:name>out</xqx:name>
                      </xqx:varRef>
                    </xqx:filterExpr>
                  </xqx:stepExpr>
                  <xqx:stepExpr>
                    <xqx:xpathAxis>descendant-or-self</xqx:xpathAxis>
                    <xqx:anyKindTest/>
                  </xqx:stepExpr>
                  <xqx:stepExpr>
                    <xqx:xpathAxis>child</xqx:xpathAxis>
                    <xqx:nameTest xqx:prefix="env">Body</xqx:nameTest>
                  </xqx:stepExpr>
                </xqx:pathExpr>
              </xqxuf:targetExpr>
              <xqxuf:replacementExpr>
                <xqx:elementConstructor>
                  <xqx:tagName xqx:prefix="env">Body</xqx:tagName>
                  <xqx:elementContent>
                    <xqx:functionCallExpr>
                      <xqx:functionName xqx:prefix="local">airports</xqx:functionName>
                      <xqx:arguments>
                        <xqx:varRef>
                          <xqx:name>out</xqx:name>
                        </xqx:varRef>
                      </xqx:arguments>
                    </xqx:functionCallExpr>
                  </xqx:elementContent>
                </xqx:elementConstructor>
              </xqxuf:replacementExpr>
            </xqxuf:replaceExpr>
          </xqx:sequenceExpr>
        </xqxuf:modifyExpr>
        <xqxuf:returnExpr>
          <xqx:varRef>
            <xqx:name>out</xqx:name>
          </xqx:varRef>
        </xqxuf:returnExpr>
      </xqxuf:transformExpr>
    </xqx:queryBody>
  </xqx:mainModule>
</xqx:module>
