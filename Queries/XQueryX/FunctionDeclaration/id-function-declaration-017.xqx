<?xml version="1.0"?>
<xqx:module xmlns:xqx="http://www.w3.org/2005/XQueryX"
            xmlns:xqxuf="http://www.w3.org/2007/xquery-update-10"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.w3.org/2007/xquery-update-10
                                http://www.w3.org/2007/xquery-update-10/xquery-update-10-xqueryx.xsd">
  <xqx:mainModule>
    <xqx:prolog>
      <xqx:functionDecl xqx:updatingFunction="true">
        <xqx:functionName xqx:prefix="local">increase</xqx:functionName>
        <xqx:paramList>
          <xqx:param>
            <xqx:varName>e</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:elementTest>
                <xqx:elementName>
                  <xqx:QName>b</xqx:QName>
                </xqx:elementName>
              </xqx:elementTest>
              <xqx:occurrenceIndicator>?</xqx:occurrenceIndicator>
            </xqx:typeDeclaration>
          </xqx:param>
          <xqx:param>
            <xqx:varName>amount</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:atomicType xqx:prefix="xs">integer</xqx:atomicType>
            </xqx:typeDeclaration>
          </xqx:param>
        </xqx:paramList>
        <xqx:functionBody>
          <xqx:ifThenElseExpr>
            <xqx:ifClause>
              <xqx:varRef>
                <xqx:name>e</xqx:name>
              </xqx:varRef>
            </xqx:ifClause>
            <xqx:thenClause>
              <xqx:sequenceExpr>
                <xqxuf:replaceExpr>
                  <xqxuf:replaceValue/>
                  <xqxuf:targetExpr>
                    <xqx:varRef>
                      <xqx:name>e</xqx:name>
                    </xqx:varRef>
                  </xqxuf:targetExpr>
                  <xqxuf:replacementExpr>
                    <xqx:addOp>
                      <xqx:firstOperand>
                        <xqx:varRef>
                          <xqx:name>e</xqx:name>
                        </xqx:varRef>
                      </xqx:firstOperand>
                      <xqx:secondOperand>
                        <xqx:varRef>
                          <xqx:name>amount</xqx:name>
                        </xqx:varRef>
                      </xqx:secondOperand>
                    </xqx:addOp>
                  </xqxuf:replacementExpr>
                </xqxuf:replaceExpr>
                <xqx:functionCallExpr>
                  <xqx:functionName xqx:prefix="local">increase</xqx:functionName>
                  <xqx:arguments>
                    <xqx:pathExpr>
                      <xqx:stepExpr>
                        <xqx:filterExpr>
                          <xqx:varRef>
                            <xqx:name>e</xqx:name>
                          </xqx:varRef>
                        </xqx:filterExpr>
                      </xqx:stepExpr>
                      <xqx:stepExpr>
                        <xqx:xpathAxis>parent</xqx:xpathAxis>
                        <xqx:anyKindTest/>
                      </xqx:stepExpr>
                      <xqx:stepExpr>
                        <xqx:xpathAxis>child</xqx:xpathAxis>
                        <xqx:nameTest>b</xqx:nameTest>
                        <xqx:predicates>
                          <xqx:nodeAfterOp>
                            <xqx:firstOperand>
                              <xqx:pathExpr>
                                <xqx:stepExpr>
                                  <xqx:filterExpr>
                                    <xqx:contextItemExpr/>
                                  </xqx:filterExpr>
                                </xqx:stepExpr>
                              </xqx:pathExpr>
                            </xqx:firstOperand>
                            <xqx:secondOperand>
                              <xqx:varRef>
                                <xqx:name>e</xqx:name>
                              </xqx:varRef>
                            </xqx:secondOperand>
                          </xqx:nodeAfterOp>
                          <xqx:integerConstantExpr>
                            <xqx:value>1</xqx:value>
                          </xqx:integerConstantExpr>
                        </xqx:predicates>
                      </xqx:stepExpr>
                    </xqx:pathExpr>
                    <xqx:addOp>
                      <xqx:firstOperand>
                        <xqx:varRef>
                          <xqx:name>amount</xqx:name>
                        </xqx:varRef>
                      </xqx:firstOperand>
                      <xqx:secondOperand>
                        <xqx:integerConstantExpr>
                          <xqx:value>1</xqx:value>
                        </xqx:integerConstantExpr>
                      </xqx:secondOperand>
                    </xqx:addOp>
                  </xqx:arguments>
                </xqx:functionCallExpr>
              </xqx:sequenceExpr>
            </xqx:thenClause>
            <xqx:elseClause>
              <xqx:sequenceExpr/>
            </xqx:elseClause>
          </xqx:ifThenElseExpr>
        </xqx:functionBody>
      </xqx:functionDecl>
    </xqx:prolog>
    <xqx:queryBody>
      <xqx:flworExpr>
        <xqx:letClause>
          <xqx:letClauseItem>
            <xqx:typedVariableBinding>
              <xqx:varName>a1</xqx:varName>
            </xqx:typedVariableBinding>
            <xqx:letExpr>
              <xqx:elementConstructor>
                <xqx:tagName>a</xqx:tagName>
                <xqx:elementContent>
                  <xqx:flworExpr>
                    <xqx:forClause>
                      <xqx:forClauseItem>
                        <xqx:typedVariableBinding>
                          <xqx:varName>i</xqx:varName>
                        </xqx:typedVariableBinding>
                        <xqx:forExpr>
                          <xqx:rangeSequenceExpr>
                            <xqx:startExpr>
                              <xqx:integerConstantExpr>
                                <xqx:value>1</xqx:value>
                              </xqx:integerConstantExpr>
                            </xqx:startExpr>
                            <xqx:endExpr>
                              <xqx:integerConstantExpr>
                                <xqx:value>100</xqx:value>
                              </xqx:integerConstantExpr>
                            </xqx:endExpr>
                          </xqx:rangeSequenceExpr>
                        </xqx:forExpr>
                      </xqx:forClauseItem>
                    </xqx:forClause>
                    <xqx:returnClause>
                      <xqx:elementConstructor>
                        <xqx:tagName>b</xqx:tagName>
                        <xqx:elementContent>
                          <xqx:varRef>
                            <xqx:name>i</xqx:name>
                          </xqx:varRef>
                        </xqx:elementContent>
                      </xqx:elementConstructor>
                    </xqx:returnClause>
                  </xqx:flworExpr>
                </xqx:elementContent>
              </xqx:elementConstructor>
            </xqx:letExpr>
          </xqx:letClauseItem>
        </xqx:letClause>
        <xqx:letClause>
          <xqx:letClauseItem>
            <xqx:typedVariableBinding>
              <xqx:varName>a2</xqx:varName>
            </xqx:typedVariableBinding>
            <xqx:letExpr>
              <xqxuf:transformExpr>
                <xqxuf:transformCopies>
                  <xqxuf:transformCopy>
                    <xqx:varRef>
                      <xqx:name>a3</xqx:name>
                    </xqx:varRef>
                    <xqxuf:copySource>
                      <xqx:varRef>
                        <xqx:name>a1</xqx:name>
                      </xqx:varRef>
                    </xqxuf:copySource>
                  </xqxuf:transformCopy>
                </xqxuf:transformCopies>
                <xqxuf:modifyExpr>
                  <xqx:functionCallExpr>
                    <xqx:functionName xqx:prefix="local">increase</xqx:functionName>
                    <xqx:arguments>
                      <xqx:pathExpr>
                        <xqx:stepExpr>
                          <xqx:filterExpr>
                            <xqx:varRef>
                              <xqx:name>a3</xqx:name>
                            </xqx:varRef>
                          </xqx:filterExpr>
                        </xqx:stepExpr>
                        <xqx:stepExpr>
                          <xqx:xpathAxis>child</xqx:xpathAxis>
                          <xqx:nameTest>b</xqx:nameTest>
                          <xqx:predicates>
                            <xqx:integerConstantExpr>
                              <xqx:value>1</xqx:value>
                            </xqx:integerConstantExpr>
                          </xqx:predicates>
                        </xqx:stepExpr>
                      </xqx:pathExpr>
                      <xqx:integerConstantExpr>
                        <xqx:value>1</xqx:value>
                      </xqx:integerConstantExpr>
                    </xqx:arguments>
                  </xqx:functionCallExpr>
                </xqxuf:modifyExpr>
                <xqxuf:returnExpr>
                  <xqx:varRef>
                    <xqx:name>a3</xqx:name>
                  </xqx:varRef>
                </xqxuf:returnExpr>
              </xqxuf:transformExpr>
            </xqx:letExpr>
          </xqx:letClauseItem>
        </xqx:letClause>
        <xqx:returnClause>
          <xqx:elementConstructor>
            <xqx:tagName>totals</xqx:tagName>
            <xqx:elementContent>
              <xqx:sequenceExpr>
                <xqx:functionCallExpr>
                  <xqx:functionName>sum</xqx:functionName>
                  <xqx:arguments>
                    <xqx:pathExpr>
                      <xqx:stepExpr>
                        <xqx:filterExpr>
                          <xqx:varRef>
                            <xqx:name>a1</xqx:name>
                          </xqx:varRef>
                        </xqx:filterExpr>
                      </xqx:stepExpr>
                      <xqx:stepExpr>
                        <xqx:xpathAxis>child</xqx:xpathAxis>
                        <xqx:nameTest>b</xqx:nameTest>
                      </xqx:stepExpr>
                      <xqx:stepExpr>
                        <xqx:filterExpr>
                          <xqx:functionCallExpr>
                            <xqx:functionName xqx:prefix="xs">integer</xqx:functionName>
                            <xqx:arguments>
                              <xqx:pathExpr>
                                <xqx:stepExpr>
                                  <xqx:filterExpr>
                                    <xqx:contextItemExpr/>
                                  </xqx:filterExpr>
                                </xqx:stepExpr>
                              </xqx:pathExpr>
                            </xqx:arguments>
                          </xqx:functionCallExpr>
                        </xqx:filterExpr>
                      </xqx:stepExpr>
                    </xqx:pathExpr>
                  </xqx:arguments>
                </xqx:functionCallExpr>
                <xqx:functionCallExpr>
                  <xqx:functionName>sum</xqx:functionName>
                  <xqx:arguments>
                    <xqx:pathExpr>
                      <xqx:stepExpr>
                        <xqx:filterExpr>
                          <xqx:varRef>
                            <xqx:name>a2</xqx:name>
                          </xqx:varRef>
                        </xqx:filterExpr>
                      </xqx:stepExpr>
                      <xqx:stepExpr>
                        <xqx:xpathAxis>child</xqx:xpathAxis>
                        <xqx:nameTest>b</xqx:nameTest>
                      </xqx:stepExpr>
                      <xqx:stepExpr>
                        <xqx:filterExpr>
                          <xqx:functionCallExpr>
                            <xqx:functionName xqx:prefix="xs">integer</xqx:functionName>
                            <xqx:arguments>
                              <xqx:pathExpr>
                                <xqx:stepExpr>
                                  <xqx:filterExpr>
                                    <xqx:contextItemExpr/>
                                  </xqx:filterExpr>
                                </xqx:stepExpr>
                              </xqx:pathExpr>
                            </xqx:arguments>
                          </xqx:functionCallExpr>
                        </xqx:filterExpr>
                      </xqx:stepExpr>
                    </xqx:pathExpr>
                  </xqx:arguments>
                </xqx:functionCallExpr>
              </xqx:sequenceExpr>
            </xqx:elementContent>
          </xqx:elementConstructor>
        </xqx:returnClause>
      </xqx:flworExpr>
    </xqx:queryBody>
  </xqx:mainModule>
</xqx:module>
