<?xml version="1.0"?>
<xqx:module xmlns:xqx="http://www.w3.org/2005/XQueryX"
            xmlns:xqxuf="http://www.w3.org/2007/xquery-update-10"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.w3.org/2005/XQueryX
                                http://www.w3.org/2005/XQueryX/xqueryx.xsd
                                http://www.w3.org/2007/xquery-update-10
                                http://www.w3.org/2007/xquery-update-10/xquery-update-10-xqueryx.xsd">
  <xqx:mainModule>
    <xqx:prolog>
      <xqx:varDecl>
        <xqx:varName>input-context</xqx:varName>
        <xqx:external/>
      </xqx:varDecl>
    </xqx:prolog>
    <xqx:queryBody>
      <xqx:flworExpr>
        <xqx:letClause>
          <xqx:letClauseItem>
            <xqx:typedVariableBinding>
              <xqx:varName>var</xqx:varName>
            </xqx:typedVariableBinding>
            <xqx:letExpr>
              <xqx:pathExpr>
                <xqx:stepExpr>
                  <xqx:filterExpr>
                    <xqx:varRef>
                      <xqx:name>input-context</xqx:name>
                    </xqx:varRef>
                  </xqx:filterExpr>
                </xqx:stepExpr>
                <xqx:stepExpr>
                  <xqx:xpathAxis>child</xqx:xpathAxis>
                  <xqx:nameTest>works</xqx:nameTest>
                  <xqx:predicates>
                    <xqx:integerConstantExpr>
                      <xqx:value>1</xqx:value>
                    </xqx:integerConstantExpr>
                  </xqx:predicates>
                </xqx:stepExpr>
                <xqx:stepExpr>
                  <xqx:xpathAxis>child</xqx:xpathAxis>
                  <xqx:nameTest>employee</xqx:nameTest>
                  <xqx:predicates>
                    <xqx:integerConstantExpr>
                      <xqx:value>1</xqx:value>
                    </xqx:integerConstantExpr>
                  </xqx:predicates>
                </xqx:stepExpr>
              </xqx:pathExpr>
            </xqx:letExpr>
          </xqx:letClauseItem>
        </xqx:letClause>
        <xqx:returnClause>
          <xqx:typeswitchExpr>
            <xqx:argExpr>
              <xqx:functionCallExpr>
                <xqx:functionName xqx:prefix="xs">int</xqx:functionName>
                <xqx:arguments>
                  <xqx:integerConstantExpr>
                    <xqx:value>10</xqx:value>
                  </xqx:integerConstantExpr>
                </xqx:arguments>
              </xqx:functionCallExpr>
            </xqx:argExpr>
            <xqx:typeswitchExprCaseClause>
              <xqx:variableBinding>i</xqx:variableBinding>
              <xqx:sequenceType>
                <xqx:atomicType xqx:prefix="xs">double</xqx:atomicType>
              </xqx:sequenceType>
              <xqx:resultExpr>
                <xqx:typeswitchExpr>
                  <xqx:argExpr>
                    <xqx:functionCallExpr>
                      <xqx:functionName xqx:prefix="xs">int</xqx:functionName>
                      <xqx:arguments>
                        <xqx:integerConstantExpr>
                          <xqx:value>10</xqx:value>
                        </xqx:integerConstantExpr>
                      </xqx:arguments>
                    </xqx:functionCallExpr>
                  </xqx:argExpr>
                  <xqx:typeswitchExprCaseClause>
                    <xqx:variableBinding>i</xqx:variableBinding>
                    <xqx:sequenceType>
                      <xqx:atomicType xqx:prefix="xs">int</xqx:atomicType>
                    </xqx:sequenceType>
                    <xqx:resultExpr>
                      <xqx:sequenceExpr/>
                    </xqx:resultExpr>
                  </xqx:typeswitchExprCaseClause>
                  <xqx:typeswitchExprCaseClause>
                    <xqx:variableBinding>i</xqx:variableBinding>
                    <xqx:sequenceType>
                      <xqx:atomicType xqx:prefix="xs">double</xqx:atomicType>
                    </xqx:sequenceType>
                    <xqx:resultExpr>
                      <xqx:stringConstantExpr>
                        <xqx:value>Test</xqx:value>
                      </xqx:stringConstantExpr>
                    </xqx:resultExpr>
                  </xqx:typeswitchExprCaseClause>
                  <xqx:typeswitchExprDefaultClause>
                    <xqx:resultExpr>
                      <xqx:sequenceExpr/>
                    </xqx:resultExpr>
                  </xqx:typeswitchExprDefaultClause>
                </xqx:typeswitchExpr>
              </xqx:resultExpr>
            </xqx:typeswitchExprCaseClause>
            <xqx:typeswitchExprCaseClause>
              <xqx:variableBinding>i</xqx:variableBinding>
              <xqx:sequenceType>
                <xqx:atomicType xqx:prefix="xs">int</xqx:atomicType>
              </xqx:sequenceType>
              <xqx:resultExpr>
                <xqxuf:replaceExpr>
                  <xqxuf:replaceValue/>
                  <xqxuf:targetExpr>
                    <xqx:pathExpr>
                      <xqx:stepExpr>
                        <xqx:filterExpr>
                          <xqx:varRef>
                            <xqx:name>input-context</xqx:name>
                          </xqx:varRef>
                        </xqx:filterExpr>
                      </xqx:stepExpr>
                      <xqx:stepExpr>
                        <xqx:xpathAxis>child</xqx:xpathAxis>
                        <xqx:nameTest>works</xqx:nameTest>
                        <xqx:predicates>
                          <xqx:integerConstantExpr>
                            <xqx:value>1</xqx:value>
                          </xqx:integerConstantExpr>
                        </xqx:predicates>
                      </xqx:stepExpr>
                      <xqx:stepExpr>
                        <xqx:xpathAxis>child</xqx:xpathAxis>
                        <xqx:nameTest>employee</xqx:nameTest>
                        <xqx:predicates>
                          <xqx:integerConstantExpr>
                            <xqx:value>1</xqx:value>
                          </xqx:integerConstantExpr>
                        </xqx:predicates>
                      </xqx:stepExpr>
                      <xqx:stepExpr>
                        <xqx:xpathAxis>child</xqx:xpathAxis>
                        <xqx:nameTest>hours</xqx:nameTest>
                        <xqx:predicates>
                          <xqx:integerConstantExpr>
                            <xqx:value>1</xqx:value>
                          </xqx:integerConstantExpr>
                        </xqx:predicates>
                      </xqx:stepExpr>
                    </xqx:pathExpr>
                  </xqxuf:targetExpr>
                  <xqxuf:replacementExpr>
                    <xqx:integerConstantExpr>
                      <xqx:value>44</xqx:value>
                    </xqx:integerConstantExpr>
                  </xqxuf:replacementExpr>
                </xqxuf:replaceExpr>
              </xqx:resultExpr>
            </xqx:typeswitchExprCaseClause>
            <xqx:typeswitchExprDefaultClause>
              <xqx:resultExpr>
                <xqx:sequenceExpr/>
              </xqx:resultExpr>
            </xqx:typeswitchExprDefaultClause>
          </xqx:typeswitchExpr>
        </xqx:returnClause>
      </xqx:flworExpr>
    </xqx:queryBody>
  </xqx:mainModule>
</xqx:module>
